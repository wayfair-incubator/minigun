# Default values for minigun.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

benchmarkDeployments:

  serviceAccount:
    # Specifies whether a service account should be created
    create: false
    # Automatically mount a ServiceAccount's API credentials?
    automount: true
    # Annotations to add to the service account
    annotations: {}
    # The name of the service account to use.
    name: "default"

  ######################
  # Default parameters to use for every instance.
  # Can override via per instance values.
  defaults:
    replicaCount: 2

    # Args converted to `--$ARG` for minigun. See `minigun --help` for supported args.
    args:
      fire-duration: 0 # infinite
      fire-rate: 10    # per instance
      send-method: GET
      send-mode: http
      workers: 4
      disable-keep-alive: true

    image:
      repository: ghcr.io/wayfair-incubator/minigun
      pullPolicy: IfNotPresent
      # Overrides the image tag whose default is the chart appVersion.
      tag: "v0.6.0"

    imagePullSecrets: []
    nameOverride: ""
    fullnameOverride: ""

    podAnnotations: {}
    podLabels: {}

    podSecurityContext: {}
      # fsGroup: 2000

    resources:
      # We don't set default limits so that chart users have the flexibility to not
      # specify limits at all (to avoid throttling for instance)
      # limits:
      #   cpu: 4000m
      #   memory: 256Mi
      requests:
        cpu: 100m
        memory: 64Mi

    securityContext: {}
      # capabilities:
      #   drop:
      #   - ALL
      # readOnlyRootFilesystem: true
      # runAsNonRoot: true
      # runAsUser: 1000

    # Service customization
    service:
      annotations: {}
      enabled: true
      labels: {}
      type: ClusterIP
      port: 8765

    # ServiceMonitor from monitoring.coreos.com/v1 API group from Prometheus Operator.
    serviceMonitor:
      annotations: {}
      enabled: false
      interval: 1m
      labels: {}
      scrapeTimeout: 10s

    # Additional volumes on the output Deployment definition.
    volumes: []
    # - name: foo
    #   secret:
    #     secretName: mysecret
    #     optional: false

    # Additional volumeMounts on the output Deployment definition.
    volumeMounts: []
    # - name: foo
    #   mountPath: "/etc/foo"
    #   readOnly: true

    nodeSelector: {}
    tolerations: []
    affinity: {}

    livenessProbe:
      httpGet:
        path: /health
        port: http
    readinessProbe:
      httpGet:
        path: /health
        port: http

  ######################
  # Actual instances of benchmarks
  instances: {}
    # minigun-1:      # unique name of the benchmark, will be used for k8s resource names
    #   enabled: true # toggle to enable override via deeper merge
    #   spec: {}      # the rest the of spec, same as in the `default` section above
